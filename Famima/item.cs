//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Famima
{
    using System;
    using System.Collections.Generic;
    using System.Linq;

    public partial class item
    {
        public int id { get; set; }
        public int quantity { get; set; }
        public string name { get; set; }
        public double price { get; set; }
        //private item _item;

        //public item(item _item)
        
            //this._item = _item;
        

        public double getPrice()
        {
            return price;// + (_item != null ? _item.getPrice() : 0);
        }

        public override string ToString()
        {
            return name;
        }

        private static FamilyMartEntities famima = FamilyMartEntities.getInstance();

        public static item add(item item)
        {
            if (item == null)
                return null;
            if (item.name == null || item.price < 0 || item.quantity < 0) return null;
            if (item.name.Equals("")) return null;
            int counter = all().Count;
            item.id = counter + 1;
            item = famima.item.Add(item);
            famima.SaveChanges();
            return item;
        }

        public static item get(int id)
        {
            List<item> items = famima.item.Where(x => x.id == id).ToList<item>();
            return items.Count > 0 ? items[0] : null;
        }

        public static item update(item item)
        {
            item to_update_item = famima.item.Where(x => x.id == item.id).ToList<item>()[0];
            if (to_update_item == null) return null;
            if (item.quantity >= 0)
                to_update_item.quantity = item.quantity;
            if (item.price >= 0)
                to_update_item.price = item.price;
            if (item.name != null)
            {
                if (!item.name.Equals(""))
                    to_update_item.name = item.name;
            }
            famima.SaveChanges();
            return to_update_item;
        }

        public static item decreaseItemQuantity(item item)
        {
            item to_update_item = famima.item.Where(x => x.id == item.id).ToList<item>()[0];
            if (to_update_item == null) return null;
            if (item.quantity >= 0)
                to_update_item.quantity = to_update_item.quantity - item.quantity;
            famima.SaveChanges();
            return to_update_item;
        }

        public static List<item> all()
        {
            return famima.item.ToList<item>();
        }
    }
}
